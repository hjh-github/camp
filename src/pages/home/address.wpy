
<template>
    <view>
        <view class="padding bg-white">
            当前城市：{{city?city.name:'请选择'}}
        </view>
        <scroll-view scroll-y class="indexes" scroll-into-view="indexes-{{listCurID}}" style="height:calc(100vh - 60px)" scroll-with-animation="true" enable-back-to-top="true">
            <block wx:for="{{list}}" wx:key>
                <view class="padding indexItem-{{list[index].name}}" id="indexes-{{list[index].name}}" data-index="{{list[index].name}}">{{list[index].name}}</view>
                <view class="cu-list menu-avatar no-padding">
                    <view @tap="check({{item}})" class="cu-item" wx:for="{{list[index].list}}" wx:key wx:for-index="sub" wx:for-item="item">
                        <view class="cu-avatar round lg">{{list[index].name}}</view>
                        <view class="content">
                            <view class="text-grey">
                                <text class="text-abc">{{item.description}}</text></view>
                        </view>
                    </view>
                </view>
            </block>
        </scroll-view>
        <view class="indexBar padding-bottom-sm" style="height:calc(100vh - 60px)">
            <view class="indexBar-box" bindtouchstart="tStart" bindtouchend="tEnd" catchtouchmove="tMove">
                <view class="indexBar-item" wx:for="{{list}}" wx:key id="{{list[index].name}}" bindtouchstart="getCur" bindtouchend="setCur">{{list[index].name}}</view>
            </view>
        </view>
        <!--选择显示-->
        <view hidden="{{hidden}}" class="indexToast">
            {{listCur}}
        </view>
    </view>
</template>

<script>
    import wepy from "wepy"
    import config from "@/api/config"
    import {
        connect
    } from "wepy-redux"
    import store from "@/store/utils"
    @connect({
        city: store.get("city")
    })
    export default class Dialog extends wepy.page {
        data = {
            hidden: true,
            list: [],
            listCur: '',
            listCurID: ''
        };
        async onLoad() {
            let res = await config.citys()
            this.list = this.filter(res)
            this.listCur = this.list[0].name
            this.$apply()
        }
        // 解析
        filter(arr) {
            let _obj = {},
                _arr = []
            arr.forEach(e => {
                if (typeof _obj[e.initial] == 'undefined') {
                    _obj[e.initial] = [e]
                } else {
                    _obj[e.initial].push(e)
                }
            })
            for (let i in _obj) {
                _arr.push({
                    name: i,
                    list: _obj[i]
                })
            }
            return _arr
        }
        methods = {
            getCur(e) {
                console.log(e.target.id)
                this.hidden = false
                this.listCur = e.target.id
            },
            setCur(e) {
                this.hidden = true
                this.listCur = this.listCur
            },
            //滑动选择Item
            tMove(e) {
                let y = e.touches[0].clientY,
                    offsettop = this.data.boxTop,
                    that = this;
                //判断选择区域,只有在选择区才会生效
                if (y > offsettop) {
                    let num = parseInt((y - offsettop) / 20);
                    this.listCur = that.list[num].name
                };
            },
            //触发全部开始选择
            tStart() {
                this.hidden = false
            },
            //触发结束选择
            tEnd() {
                this.hidden = true
                this.listCurID = this.listCur
            },
            check(e){
                store.save('city', e)
                wepy.$instance.globalData.cityCode = e.code
                wepy.switchTab({ url: './index' });
                
            }
        };
    }
</script>
<style>
    page {
        height: 100%;
    }
</style>

<style lang="less" scoped>
    page {
        padding-top: 100rpx;
    }
    .indexes {
        position: relative;
    }
    .indexBar {
        position: fixed;
        right: 0px;
        bottom: 0px;
        padding: 20rpx 20rpx 20rpx 60rpx;
        display: flex;
        align-items: center;
    }
    .indexBar .indexBar-box {
        width: 40rpx;
        height: auto;
        background: #fff;
        display: flex;
        flex-direction: column;
        box-shadow: 0 0 20rpx rgba(0, 0, 0, 0.1);
        border-radius: 10rpx;
    }
    .indexBar-item {
        flex: 1;
        width: 40rpx;
        height: 40rpx;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24rpx;
        color: #888;
    }
    movable-view.indexBar-item {
        width: 40rpx;
        height: 40rpx;
        z-index: 9;
        position: relative;
    }
    movable-view.indexBar-item::before {
        content: "";
        display: block;
        position: absolute;
        left: 0;
        top: 10rpx;
        height: 20rpx;
        width: 4rpx;
        background-color: #f37b1d;
    }
    .indexToast {
        position: fixed;
        top: 0;
        right: 80rpx;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        width: 100rpx;
        height: 100rpx;
        border-radius: 10rpx;
        margin: auto;
        color: #fff;
        line-height: 100rpx;
        text-align: center;
        font-size: 48rpx;
    }
</style>