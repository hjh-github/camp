
<template>
  <view class="h100">
    <loading wx:if="{{!isShow}}" />
    <view wx:if="{{isShow}}" class="h100">
      <cHeader></cHeader>
      <scroll-view class="main" scroll-y @scroll="scroll" lower-threshold="20" scroll-anchoring="{{true}}" bindscrolltolower="getMore">
        <cSwiper :model.sync="swipers"></cSwiper>
        <Navs :model.sync="navs"></Navs>
        <scrollNav :isfixed.sync="isfixed" :model.sync="scrollNav" @ret.user="getScreen"></scrollNav>
        <!-- <scrollNav hidden="{{!isfixed}}" :model.sync="model" @ret.user="getScreen" class="fixed"></scrollNav> -->
        <cCard :model.sync="courses"></cCard>
        <view class="cu-load {{!isLoad?'loading':'over'}}" style="background-color:#f5f5f5"></view>
      </scroll-view>
    </view>
  </view>
</template>

<script>
  import wepy from "wepy";
  import cHeader from "@/components/home/header"
  import cSwiper from "@/components/common/swiper"
  import loading from "@/components/common/loading"
  import Navs from "@/components/home/navs"
  import scrollNav from "@/components/home/scrollNav"
  import cCard from "@/components/home/cCard"
  import config from "@/api/config"
  import auth from "@/api/auth"
  import store from "@/store/utils"
  import {
        connect
    } from "wepy-redux"
  @connect({
        city: store.get("city")
    })
  export default class Dialog extends wepy.page {
    data = {
      isfixed: false,
      theme: wepy.$instance.globalData.themeColor,
      swipers: {
        type: 1,
        list: [],
      },
      navs: {
        list: [],
        gridCol: 5,
        skin: false
      },
      scrollNav: [{
        id: 0,
        name: '全部'
      }],
      courses: [],
      isShow: false,
      courseTypeId: 0,
      sort: 0,
      pageIndex: 1,
      pageSize: 10,
      toload: false,
      isLoad: true,
      loadmoring: false,
      _city:''
    };
    components = {
      cSwiper,
      Navs,
      cHeader,
      scrollNav,
      cCard,
      loading
    }
    config = {
      navigationBarTitleText: "华心桥体验营",
      enablePullDownRefresh: true
    };
    async onLoad() {
      wepy.setNavigationBarColor({
        frontColor: '#ffffff', //前景颜色值，包括按钮、标题、状态栏的颜色，仅支持 #ffffff 和 #000000,
        backgroundColor: this.theme, //背景颜色值，有效值为十六进制颜色,
        success: res => {}
      });
      await auth.login()
      await this.load()
      this.isShow = true
      this.$apply()
      // this.$invoke('cSwiper', 'load', this.model)
      // this.$invoke('Navs', 'load', this.model)
    }
    async onShow() {
      if (!this.isShow || this._city == this.city.name) {
        return false
      }
      await this.load(1)
      this.$apply()
    }
    async onPullDownRefresh() {
      await this.loadcourses(1)
      this.pageIndex = 1
      this.$apply()
      wx.stopPullDownRefresh()
    }
    async load(page = '') {
      let homeData = await config.getIndex({
        courseTypeId: this.courseTypeId,
        sort: this.sort,
        pageIndex: page || this.pageIndex,
        pageSize: this.pageSize
      })
      this.swipers.list = homeData.banners
      this.navs.list = homeData.navs
      this.scrollNav.push(...homeData.types)
      this.courses = homeData.courses
      this._city = homeData.cityName
      if (!wepy.$instance.globalData.cityCode) {
        store.save('city', {
          name: homeData.cityName,
          code: homeData.cityCode
        })
        wepy.$instance.globalData.cityCode = homeData.cityCode
      }
    }
    showMore() {
      this.isLoad = false
    }
    noMore() {
      this.isLoad = true
    }
    async loadcourses(pageIndex) {
      let params = {
        courseTypeId: this.courseTypeId,
        sort: this.sort,
        pageIndex: pageIndex,
        pageSize: this.pageSize
      }
      let courses = await config.getCourses(params)
      if (!courses.courses.length) {
        if (pageIndex == 1) {
          this.courses = courses.courses
        }
        this.pageIndex = pageIndex
        this.noMore()
        this.$apply()
        return false
      } else {
        if (pageIndex > 1) this.pageIndex = pageIndex
        if (pageIndex == 1) {
          this.courses = courses.courses
        } else {
          this.courses = this.courses.concat(courses.courses)
        }
      }
    }
    methods = {
      async getScreen(key, screen) {
        this.courseTypeId = key
        this.sort = screen
        await this.loadcourses(1)
        this.$apply()
      },
      scroll(e) {
        if(e.detail.scrollTop < 5){
          wx.startPullDownRefresh()
        }
        if (e.detail.scrollTop > 428) {
          if (!this.isfixed) this.isfixed = true
        } else {
          if (this.isfixed) this.isfixed = false
        }
      },
      async getMore() {
        if (this.loadmoring) {
          return false
        }
        this.loadmoring = true
        this.showMore()
        await this.loadcourses(this.pageIndex + 1)
        this.loadmoring = false
        this.$apply()
      }
    };
  }
</script>

<style>
  page {
    height: 100%;
  }
</style>

<style lang="less" scoped>
  .main {
    height: calc(~'100% - 110rpx');
  }
</style>