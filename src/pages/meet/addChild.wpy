
<template>
    <view class="h100">
        <!-- 下面是模态弹窗，可以独立模块 -->
        <view class="cu-modal {{modalName =='tips'?'show':''}}">
            <view class="cu-dialog">
                <view class="action text-black text-left padding-xl" bindtap="hideModal">
                    <view class="text-sm text-orange padding-top padding-bottom">1.为什么需要填写儿童证件以及身高体重信息？</view>
                    <view style="line-height:1.66">
                        <text class="text-black text-sm">答：一为了儿童购买旅游保险；二为了儿童选择合适尺码的衣服。 </text>
                    </view>
                    <view class="text-sm text-orange padding-top padding-bottom">1.为什么需要填写家长的证件信息？</view>
                    <view style="line-height:1.66">
                        <text class="text-black text-sm">答：因为签订电子旅游合同，儿童是未成年人，必须由监护人签订，需要签订人（即监护人）的有效证件号码、 </text>
                    </view>
                </view>
                <view class="cu-bar bg-white">
                    <view class="action margin-0 flex-sub text-orange solid-left" bindtap="hideModal">我知道了</view>
                </view>
            </view>
        </view>
        <scroll-view class="main" scroll-y>
            <view class="cu-bar bg-white solid-bottom">
                <view class="action">
                    <text class="cuIcon-evaluate text-orange "></text> 儿童信息
                </view>
                <view @tap="tips" class="action  text-orange">
                    说明<text class="cuIcon-question padding-left-xs"></text>
                </view>
            </view>
            <view>
                <view class="cu-form-group">
                    <view class="title">姓名</view>
                    <input @input="input" value="{{form.name}}" class="text-right" data-target="name" placeholder-class="text-sm" placeholder="请填写儿童姓名"></input>
                </view>
                <view class="cu-form-group">
                    <view class="title">证件类型</view>
                    <picker bindchange="PickerChange" value="{{cardInx}}" range="{{picker}}" range-key="name">
                        <view class="picker">
                            {{picker[cardInx].name}}
                        </view>
                    </picker>
                </view>
                <view class="cu-form-group">
                    <view class="title">{{picker[cardInx].name}}</view>
                    <input @input="input" class="text-right" value="{{form.cardNum}}" data-target="cardNum" data-type="{{picker[cardInx].type}}" placeholder-class="text-sm" placeholder="请填写证件号码"></input>
                </view>
                <view class="cu-form-group">
                    <view class="title">出生日期</view>
                    <picker mode="date" value="{{form.birthdayStr}}" data-target="birthdayStr" end="{{end_date}}" bindchange="DateChange">
                        <view class="picker">
                            {{form.birthdayStr}}
                        </view>
                    </picker>
                </view>
                <view class="cu-form-group">
                    <view class="title">性别</view>
                    <view class="flex flex-c flex__item flex-jend">
                        <view class="margin-right" @tap="gender(1)">
                            <radio checked="{{form.gender == 1}}" class="radio margin-right-sm yellow"></radio>男</view>
                        <view class="margin-right" @tap="gender(0)">
                            <radio checked="{{form.gender == 0}}" class="radio margin-right-sm yellow"></radio>女</view>
                    </view>
                </view>
                <view class="cu-form-group">
                    <view class="title">身高（cm）</view>
                    <input @input="input" class="text-right" value="{{form.height}}" data-target="height" placeholder-class="text-sm" placeholder="请填写身高（cm），如 123"></input>
                </view>
                <view class="cu-form-group">
                    <view class="title">体重（KG）</view>
                    <input @input="input" class="text-right" value="{{form.weight}}" data-target="weight" placeholder-class="text-sm" placeholder="请填写体重（KG），如 32"></input>
                </view>
            </view>
            <view class="cu-bar bg-white margin-top solid-bottom ">
                <view class="action">
                    <text class="cuIcon-profile text-orange "></text> 监护人信息
                </view>
                <view class="action">
                    <button class="cu-tag bg-yellow text-white shadow" @tap.stop="toEdit(-1)">添加监护人</button>
                </view>
            </view>
            <view class="cu-list menu bg-white padding-top-sm margin-bottom">
                <view class="padding-left {{!gues.length?'padding-bottom':''}}"><text class="text-grey text-sm ">请选择儿童的一名监护人：</text><text @tap.stop="toEdit(-1)" class="text-yellow" wx:if="{{!gues.length}}">未添加监护人,去添加 >> </text></view>
                <repeat for="{{gues}}" key="index" index="index" item="item">
                    <view wx:if="{{gues.length}}" @tap="checkMan({{index}})" class="cu-item flex flex-c lg">
                        <view class="action text-xl padding-right">
                            <text class="cuIcon-{{manInx == index?'roundcheck': 'round'}} text-yellow "></text>
                        </view>
                        <view class="content">
                            <view><text class="text-black">{{item.name}}</text></view>
                            <text class="text-grey text-sm">{{picker[item.cardType - 1].name}}：{{item.cardNum}}</text>
                        </view>
                        <view class="action padding-right">
                            <text class="text-yellow" @tap.stop="toEdit({{item.id}})">编辑</text>
                        </view>
                    </view>
                </repeat>
            </view>
        </scroll-view>
        <view wx:if="{{id=='-1'}}" @tap="plus()" class="bg-yellow plus text-white text-center">保存</view>
        <view wx:else class="flex w100">
            <view @tap="delChild()" class="flex__item  bg-red plus text-white text-center">
                </text>删除</view>
            <view @tap="plus()" class="flex__item content bg-yellow plus text-white text-center">
                </text>修改</view>
        </view>
    </view>
</template>

<script>
    import wepy from "wepy"
    import Lang from "@/utils/Lang"
    import Tips from "@/utils/Tips"
    import config from "@/api/config"
    export default class Dialog extends wepy.page {
        config = {
            navigationBarTitleText: "儿童信息编辑"
        };
        data = {
            modalName: '',
            gues: [],
            picker: [{
                name: '内地身份证号',
                type: 1
            }, {
                name: '护照号',
                type: 2
            }, {
                name: '军官证号',
                type: 3
            }, {
                name: '港澳通行证号',
                type: 4
            }, {
                name: '台胞证号',
                type: 5
            }, {
                name: '其他证号',
                type: 6
            }, ],
            cardInx: 0,
            manInx: 0,
            id: '',
            birthdayStr: "2015-09-01",
            end_date: '',
            form: {
                name: '',
                cardType: 1,
                cardNum: '',
                gender: 1,
                birthdayStr: '',
                height: '',
                weight: '',
                shapes: 1,
                guardianId: ''
            },
            rules: [{
                    name: 'name',
                    msg: '请填写儿童姓名'
                },
                {
                    name: 'cardNum',
                    msg: '请填写儿童证件号码'
                },
                {
                    name: 'height',
                    msg: '请填写儿童身高'
                }, {
                    name: 'weight',
                    msg: '请填写儿童体重'
                }, {
                    name: 'guardianId',
                    msg: '请选择一位监护人'
                }
            ],
            isload: true
        };
        async onLoad(opt) {
            this.id = opt.id
            this.end_date = Lang.dateFormate(new Date(), 'yyyy-MM-dd')
            await this.updata()
            if (this.id == -1) {
                this.form.birthdayStr = this.end_date
            }
            this.isload = false
        }
        onShow() {
            if (this.isload) {
                return false
            }
            this.updata()
        }
        async updata() {
            await this.getGuaList()
            if (this.id != '-1') {
                await this.getChild(this.id)
            }
            // 重新选中，监护人项
            if (this.gues.length) {
                if (this.form.guardianId) {
                    this.manInx = this.gues.findIndex(e => {
                        return e.id == this.form.guardianId
                    })
                } else {
                    this.form.guardianId = this.gues[this.manInx].id
                }
            }
            this.$apply()
        }
        async getGuaList() {
            let {
                guaList
            } = await config.getGuaList()
            this.gues = guaList
            this.$apply()
        }
        async getChild(id) {
            let res = await config.getChild(id)
            this.form = {
                name: res.name,
                cardType: res.cardType,
                cardNum: res.cardNum,
                gender: res.gender,
                birthdayStr: res.birthday,
                height: res.height,
                weight: res.weight,
                shapes: res.shapes,
                guardianId: res.guardianId,
                id: res.id
            }
        }
        rulesFn() {
            let flag = true
            for (let i of this.rules) {
                if (Lang.isEmpty(this.form[i.name])) {
                    Tips.toast(i.msg, () => {}, 'none')
                    flag = false
                    break
                }
            }
            return flag
        }
        methods = {
            gender(gender) {
                this.form.gender = gender
            },
            tips() {
                this.modalName = 'tips'
            },
            hideModal() {
                this.modalName = ''
            },
            PickerChange(e) {
                this.cardInx = e.detail.value
                this.form.cardType = this.picker[this.cardInx].type
            },
            checkMan(inx) {
                this.manInx = inx
                this.form.guardianId = this.gues[this.manInx].id
            },
            toEdit(id) {
                wepy.navigateTo({
                    url: './addMan?id=' + id
                });
            },
            DateChange(e) {
                this.birthdayStr = e.detail.value
            },
            input(e) {
                let target = e.currentTarget.dataset.target || e.target.dataset.target,
                    type = e.currentTarget.dataset.type || e.target.dataset.type,
                    value = e.detail.value;
                if (target == 'cardNum' && type == 1) {
                    if (value.length == 18) {
                        let _res = Lang.getBirthdayByIdCard(value)
                        if (typeof _res == 'object') {
                            Tips.toast(_res.message, () => {}, 'none')
                        } else if (typeof _res == 'string') {
                            this.form.birthdayStr = _res
                        }
                        this.form.gender = Lang.getSexByIdCard(value)
                    }
                }
                this.form[target] = value
            },
            async plus() {
                if (this.rulesFn()) {
                    console.log(this.form)
                    if (this.form.cardType == 1) {
                        let rules = Lang.checkIdCard(this.form.cardNum)
                        if (!rules.status) {
                            Tips.toast(rules.message, () => {}, 'none')
                            return false
                        }
                    }
                    let res = await config.updateChild(this.form)
                    if (res.errcode == 200) {
                        Tips.toast('保存成功', () => {
                            wepy.navigateBack({
                                delta: 1 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
                            });
                        }, 'none')
                    }
                }
            },
            async delChild() {
                let self = this
                wx.showModal({
                    content: `确定删除${self.form.name}的儿童信息吗？`,
                    success: async function(res) {
                        if (res.confirm) {
                            let res = await config.delChild(self.id)
                            if (res.errcode == 200) {
                                Tips.toast('删除成功', () => {
                                    wepy.navigateBack({
                                        delta: 1 //返回的页面数，如果 delta 大于现有页面数，则返回到首页,
                                    });
                                }, 'none')
                            }
                        } else if (res.cancel) {}
                    }
                })
            }
        };
    }
</script>
<style>
    page {
        height: 100%;
    }
</style>
<style lang="less" scoped>
    .main {
        height: calc(~'100% - 100rpx');
        box-sizing: border-box;
    }
    .plus {
        height: 100rpx;
        line-height: 100rpx;
    }
    .cu-item {
        padding-top: 20rpx !important;
        padding-bottom: 20rpx !important;
    }
</style>