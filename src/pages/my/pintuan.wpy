
<template>
    <view class='h100'>
        <repeat for="{{orders}}" key="index" index="index" item="item">
            <view class="bg-white padding padding-bottom-xs {{!index ? 'margin-top margin-bottom': 'margin-bottom'}}">
                <view class="flex " @tap="todetaile({{item.id}})">
                    <image class="img" src="{{item.courseImage}}" mode="aspectFill">
                    </image>
                    <view class="margin-left flex flex-y flex-sb" style="overflow:hidden">
                        <view>{{item.courseTittle}}</view>
                        <view class="text-orange"><text class="text-price">{{item.moneyOrder}}</text></view>
                        <view class="flex flex-sb"><text>{{item.periods}}</text> <text><text class="cuIcon-close lg text-gray"></text>{{item.courseNum}}</text>
                        </view>
                    </view>
                </view>
                <view class="cu-bar bg-white justify-end margin-top solid-top">
                    <view class="action flex__item margin-right" style="justify-content:flex-start">
                        <tetx class="text-orange text-sm ">{{item.orderStateStr}}</tetx>
                    </view>
                    <view class="action">
                        <button class="cu-btn bg-orange margin-left" @tap="todetaile({{item.id}})">查看进度</button>
                    </view>
                </view>
            </view>
        </repeat>
        <view hidden="{{!loadmoring}}" class="cu-load {{!toload?'loading':'over'}}" style="background-color:#f5f5f5;margin-top:250rpx;"></view>
    </view>
</template>

<script>
    import wepy from "wepy"
    import config from "@/api/config"
    import Tips from "@/utils/Tips"
    import WxUtils from "@/utils/WxUtils"
    export default class Dialog extends wepy.page {
        config = {
            navigationBarTitleText: "我的拼团"
        };
        data = {
            theme: wepy.$instance.globalData.themeColor,
            orderState: {
                0: '拼团取消',
                1: '进行中',
                2: '拼团成功',
                3: '拼图失败'
            },
            orderStats: {},
            scrollLeft: 0,
            pageIndex: 1,
            orders: [],
            toload: false,
            isload: true,
            loadmoring: false,
        };
        async onLoad(opt) {
            await this.loadData()
            this.isload = false
        }
        async loadData(pageIndex) {
            let params = {
                pageIndex: pageIndex || this.pageIndex,
                pageSize: 10
            }
            let res = await config.pintuans(params)
            if (res.errcode == 200) {
                let ordersList = res.data.pintuan
                if (!ordersList.length) {
                    if (pageIndex == 1) {
                        this.orders = ordersList
                    }
                    this.pageIndex = pageIndex
                    this.toload = true
                    this.loadmoring = true
                    this.$apply()
                    return false
                } else {
                    if (pageIndex > 1) this.pageIndex = pageIndex
                    if (pageIndex == 1) {
                        this.orders = ordersList
                    } else {
                        this.orders = this.orders.concat(ordersList)
                    }
                    this.loadmoring = false
                }
                this.$apply()
            }
        }
        onShareAppMessage(res) {
            let params = {
                title: '',
                imageUrl:'',
                path: ''
            }
            if (res.from === 'button') {
                // 来自页面内转发按钮
                console.log(res.target)
                let tar = res.target
                if(tar.dataset.act == 'pt'){
                    params.title = tar.dataset.title
                    params.imageUrl = tar.dataset.images
                    params.path ='/pages/activity/pintuan?id=' +  tar.dataset.actid
                }

            }
            return {
                title: params.title,
                imageUrl:params.imageUrl,
                path:params.path
            }
        }
        async onReachBottom() {
            await this.getMore()
        }
        async getMore() {
            if (this.loadmoring) {
                return false
            }
            this.loadmoring = true
            this.toload = false
            await this.loadData(this.pageIndex + 1)
            this.$apply()
        }
        methods = {
            todetaile(id) {
                wepy.navigateTo({
                    url: '/pages/activity/pintuan?id=' + id 
                });
            },
        };
    }
</script>

<style lang="less" scoped>
    .badge {
        right: 0;
        top: 20rpx;
    }
    .posi {
        position: relative;
    }
    .img {
        width: 200rpx;
        height: 200rpx;
    }
    .main-view {
        height: calc(~"100% - 100rpx");
    }
    .fixed {
        position: fixed;
        left: 0;
        top: 108rpx;
    }
    .pr {
        position: relative;
    }
    .container {
        border-bottom: 1px solid #eee;
        height: 90rpx;
        z-index: 9999;
    }
    .nav {
        width: 100%;
        box-sizing: border-box;
    }
    .cu-item {
        width: 165rpx;
        text-align: center;
    }
</style>