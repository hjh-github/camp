<template>
    <view class="weui-flex flex-y h100">
        <!-- 桌台类型s -->
        <scroll-view class="desk-box" scroll-x>
            <repeat for="{{config}}" key="desks" index="index" item="item">
                <view wx:if="{{item.desk_id != 0}}" @tap.stop="setDesk({{item.desk_id}})" class="desk-item nol {{item.desk_id == inx ? 'on' : '' }}">
                    <view class="name">{{item.desk_name}}</view>
                    <view wx:if="{{item.is_fixed == 0}}" class="nums">（{{item.start_num}}人~{{item.end_num}}人）</view>
                    <view wx:else class="nums">（{{item.start_num}}人）</view>
                </view>
                <view wx:else class="desk-item all weui-flex flex-c flex-jc {{item.desk_id == inx ? 'on' : '' }}" @tap.stop="setDesk({{item.desk_id}})">
                    <view class="name">全部</view>
                </view>
            </repeat>
        </scroll-view>
        <view class="pandect">共有{{ques.count}}桌，{{ques.sum_num}}人排队</view>
        <scroll-view class="desk-list" scroll-y>
            <repeat wx:if="{{ques.list.length}}" for="{{ques.list}}" key="ques" index="index" item="item">
                <Que-item @getclient.user="getclient" @loadData.user="loadData" :model.sync="item"></Que-item>
            </repeat>
            <view wx:if="{{!ques.list.length}}" class="weui-flex flex-jc h100" @tap="plus" style="color:#888;margin-top:150rpx;">
                暂无排队
            </view>
            <Copyright></Copyright>
        </scroll-view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import config from '@/api/config'
    import Que from './queue'
    import Copyright from './copyright'
    export default class Queue extends wepy.component {
        props = ['config']
        data = {
            inx: 0,
            desks: [],
            ques: [],
            timer: {},
            is_first: true
        }
        components = {
            'Que-item': Que,
            Copyright
        }
        async getlist() {
            if(!wepy.getStorageSync("token")) return false;
            let params = {
                desk_id: this.inx,
                page: 1,
                pageSize: 200
            }
            console.log(params)
            let res = await config.lineups(params)
            this.ques = res
            this.$apply()
            if (this.is_first) {
                this.is_first = false
                this.timer = setInterval(() => {
                    this.getlist()
                }, 30000)
            }
        }
        methods = {
            setDesk(inx) {
                console.log(inx)
                this.inx = inx
                this.getlist()
            },
            loadData() {
                this.getlist()
            },
            getclient(text) {
                this.$emit('getclient', text)
            },
            clearTime() {
                clearTimeout(this.timer)
            }
        }
    }
</script>
<style>
    /* 隐藏滚动条 */
     ::-webkit-scrollbar {
        width: 0;
        height: 0;
        color: transparent;
    }
</style>
<style lang="less" scoped>
    .desk-box {
        width: 708rpx;
        height: 110rpx;
        line-height: 110rpx;
        white-space: nowrap;
        .desk-item {
            // box-sizing: border-box;
            width: 177rpx;
            height: 110rpx;
            line-height: 110rpx;
            display: inline-block;
            font-size: 28rpx;
            text-align: center;
            border-right: 2px solid #f5f5f5;
            background-color: #fff;
            overflow: hidden;
            position: relative;
            &.nol {
                .name {
                    position: absolute;
                    width: 100%;
                    text-align: center;
                    left: 0;
                    top: 10rpx;
                }
                .nums {
                    position: absolute;
                    width: 100%;
                    text-align: center;
                    left: 0;
                    top: 60rpx;
                }
            }
            &.all {
                .name {
                    position: absolute;
                    width: 100%;
                    text-align: center;
                    left: 0;
                    top: 16px;
                }
                .nums {
                    opacity: 0;
                    width: 0;
                    height: 0;
                }
            }
            &.on {
                background-color: rgb(244, 132, 35);
                color: #fff;
            }
            >view {
                height: 55rpx;
                line-height: 55rpx;
            }
            .nums {
                font-size: 24rpx;
                line-height: 1
            }
        }
    }
    .pandect {
        text-align: center;
        font-size: 24rpx;
        color: rgb(153, 153, 153);
        padding: 20rpx;
    }
    .desk-list {
        height: calc(~'100% - 180rpx');
    }
</style>