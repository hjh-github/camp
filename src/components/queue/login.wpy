<template>
    <view class="login-box" wx:if="{{dialogShow}}">
        <view class="weui-flex flex-c flex-y login-bar">
            <view class="title" style="color:{{theme}}">款易排队</view>
            <view class="weui-flex flex-c item-box">
                <input class="input-box" value="{{phone}}" adjust-position @input="setPhone" type="text" placeholder="请输入手机号" placeholder-style="color:rgb(153,153,153)">
                </input>
                <button class="btn" open-type="getPhoneNumber" bindgetphonenumber="getPhoneNumber" style="background-color:{{theme}}">自动填写</button>
            </view>
            <view class="weui-flex flex-c item-box">
                <input class="input-box" @input="setCode" type="text" placeholder="请输入验证码" placeholder-style="color:rgb(153,153,153)">
                </input>
                <button class="btn yzm {{count > 0 ? 'disable' :''}}" @tap="getCode" style="border-color:{{theme}};color:{{theme}}">{{ count > 0? count+'s': '验证码'}}</button>
            </view>
            <view class="submit act" @tap="login" style="background-color:{{theme}}">登录</view>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import Auth from '@/api/auth'
    import Tips from "@/utils/Tips";
    import store from "@/store/utils";
    export default class Login extends wepy.component {
        props = ['dialogShow']
        data = {
            theme: wepy.$instance.globalData.themeColor,
            phone: '',
            count: 0,
            code: '',
            timer: ''
        }
        // 获取验证码后倒计时
        countDown() {
            let count = 60;
            this.count = count;
            this.timer = setInterval(() => {
                if (count > 1) {
                    count--;
                    this.count = count;
                    this.$apply();
                } else {
                    clearInterval(this.timer);
                    this.count = 0;
                    this.$apply();
                }
            }, 1000);
        }
        methods = {
            // 获取手机号码
            async getPhoneNumber(e) {
                let {
                    code
                } = await wepy.login();
                let params = {
                    code,
                    encrypte_data: e.detail.encryptedData,
                    iv: e.detail.iv
                }
                try {
                    let {
                        phone
                    } = await Auth.getPhone(params);
                    if (phone) {
                        if (this.count > 0) {
                            clearInterval(this.timer);
                            this.count = 0;
                            this.$apply();
                        }
                        this.phone = phone;
                        this.$apply();
                    } else {
                        Tips.toast("网络繁忙，请重新获取", null, "none");
                    }
                } catch (res) {
                    Tips.toast("网络繁忙或放弃了授权,请重试！", null, "none");
                }
            },
            setPhone(e) {
                console.log(e)
                this.phone = e.detail.value;
                if (this.count > 0) {
                    clearInterval(this.timer);
                    this.count = 0;
                    this.$apply();
                }
            },
            setCode(e) {
                this.code = e.detail.value;
            },
            async getCode() {
                if (this.phone.length != 11) {
                    Tips.toast("手机号码有误！", null, "none");
                } else {
                    let sendMsg = await Auth.sendCode(this.phone);
                    if (sendMsg) {
                        Tips.toast("验证码已发送到您的手机", null, "none");
                    }
                    this.countDown();
                }
            },
            // 登录
            async login() {
                let params = {
                    code: this.code,
                    phone: this.phone
                }
                let data = await Auth.login(params);
                if (data.errcode == 0) {
                    wepy.setStorageSync('token', data.data.token);
                    Tips.toast('登录成功', null, "none");
                    clearInterval(this.timer);
                    this.count = 0;
                    store.save('auth', false);
                    this.$emit('load');
                    this.$apply();
                } else {
                    Tips.toast(data.errmsg, () => {
                        clearInterval(this.timer);
                        this.count = 0;
                        this.$apply();
                    }, "none");
                }
            }
        }
    }
</script>

<style lang="less" scoped>
    .login-box {
        width: 100%;
        height: 100%;
        position: fixed;
        top: 0;
        left: 0;
        background-color: #fff;
        z-index: 10;
        .login-bar {
            position: absolute;
            left: 50%;
            top: 450rpx;
            transform: translateY(-50%);
            margin-left: -140px;
            width: 520rpx;
            padding: 15px 28px;
            box-sizing: border-box;
            border-radius: 8px;
            .title {
                font-size: 48rpx;
                text-align: center;
                margin-bottom: 30px;
            }
            .item-box {
                margin-bottom: 30rpx;
                .input-box {
                    box-sizing: border-box;
                    width: 358rpx;
                    height: 70rpx;
                    line-height: 70rpx;
                    border: 1px solid #ddd;
                    border-top-left-radius: 4px;
                    border-bottom-left-radius: 4px;
                    border-right: 0;
                    overflow: hidden;
                    padding-left: 10px;
                    font-size: 15px;
                    min-height: 70rpx;
                }
                .btn {
                    box-sizing: border-box;
                    white-space: nowrap;
                    width: 162rpx;
                    height: 70rpx;
                    line-height: 70rpx;
                    font-size: 15px;
                    border-top-left-radius: 0;
                    border-bottom-left-radius: 0;
                    color: #fff;
                    &.yzm {
                        border: 1px solid transparent;
                    }
                    &.disable {
                        pointer-events: none;
                        opacity: 0.7;
                    }
                }
            }
            .submit {
                width: 520rpx;
                height: 70rpx;
                line-height: 70rpx;
                text-align: center;
                color: #fff;
                border-radius: 10rpx;
                margin-top: 10px;
                &:active {
                    opacity: 0.8;
                }
            }
        }
    }
</style>