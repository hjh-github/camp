
<template>
    <view class="flex flex-c flex-y h100 padding-top">
        <view class="bg-img flex flex-c flex-jc" style="width:327rpx;height:327rpx;background-image:url(https://images.kuan1.cn/kuan1/upload/image/20201221/20201221164710_73504.png)">
            <image wx:if="{{ unTime < 11 && unTime > 0}}" src="../images/time_{{unTime}}.png" mode="aspectFit" style="height:100rpx;" />
            <view wx:if="{{unTime < 1}}" class="text-xxl">时间到</view>
            <view wx:if="{{unTime > 10}}" style="font-size:70rpx">{{unTime}}秒</view>
        </view>
        <view class="bg-box">
            <view wx:if="{{step == 0}}" @tap="start" class="open-btn bg-img" style="width:350rpx;height:73rpx;background-image:url(https://images.kuan1.cn/kuan1/upload/image/20201211/20201211101632_93911.png)"></view>
            <view wx:if="{{step == 0}}" class="text-center">您准备好了吗，点击“开始答题”开始计时答题</view>
            <view wx:if="{{step == 1}}" class="flex flex-y flex-c">
                <view class="question" style="width:100%">1.{{qustions[qustionInx].question}}</view>
                <view @tap="select('A')" class="answer {{qustions[qustionInx].answer == 'A' ? 'is-answer':'not-answer'}} {{'A' == qustions[qustionInx].answerUser ? 'select':''}}">
                    <view class="flex-1">{{qustions[qustionInx].optionA}}</view>
                </view>
                <view @tap="select('B')" class="answer {{qustions[qustionInx].answer == 'B' ? 'is-answer':'not-answer'}} {{'B' == qustions[qustionInx].answerUser ? 'select':''}}">
                    <view class="flex-1">{{qustions[qustionInx].optionB}}</view>
                </view>
                <view @tap="select('C')" class="answer {{qustions[qustionInx].answer == 'C' ? 'is-answer':'not-answer'}} {{'C' == qustions[qustionInx].answerUser ? 'select':''}}">
                    <view class="flex-1">{{qustions[qustionInx].optionC}}</view>
                </view>
                <view @tap="select('D')" class="answer {{qustions[qustionInx].answer == 'D' ? 'is-answer':'not-answer'}} {{'D' == qustions[qustionInx].answerUser ? 'select':''}}">
                    <view class="flex-1">{{qustions[qustionInx].optionD}}</view>
                </view>
            </view>
            <view wx:if="{{step == 2}}" class="result-bg">
                <view class="text-xl text-green text-center margin-top">恭喜您，完成答题！</view>
                <view class="text-center margin-top-sm">您的成绩：{{result.answerSheet.score}}分！耗时：{{result.answerSheet.spendTime}}秒</view>
                <view class="get-btn" @tap="back">回到首页</view>
            </view>
        </view>
    </view>
</template>

<script>
    import wepy from "wepy";
    import Tips from "@/utils/Tips";
    import WxUtils from "@/utils/WxUtils";
    import config from "../api/config";
    import auth from "@/api/auth";
    import store from "@/store/utils";
    export default class Dialog extends wepy.page {
        config = {
            navigationBarTitleText: "答题"
        };
        data = {
            step: 0,
            qustions: [],
            qustionInx: 0,
            testPaper: {},
            answers: {},
            unTime: 10,
            result: {},
            opt:{}
        };
        async onLoad(opt) {
            this.opt = opt
            await auth.login();
        }
        async start() {
            let {
                testPaper
            } = await config.answerStart(this.opt.id);
            if (testPaper && testPaper.testPaperQuestions) {
                this.step = 1;
                this.dowmTime();
                this.testPaper = testPaper;
                this.qustions = testPaper.testPaperQuestions;
                this.$apply();
            } else {
                Tips.toast('试卷被偷了，请重新点击开始答题', () => {}, 'none')
            }
        }
        dowmTime() {
            clearInterval(this.setInterval);
            this.unTime = 10;
            this.setInterval = setInterval(() => {
                if (this.unTime > 0) {
                    this.unTime = this.unTime - 1;
                    this.$apply();
                } else {
                    this.answers[this.qustionInx] = "";
                    clearInterval(this.setInterval);
                    this.nextQus()
                }
            }, 1000);
        }
        nextQus() {
            setTimeout(() => {
                if (this.qustionInx < this.qustions.length - 1) {
                    this.qustionInx = this.qustionInx + 1;
                    this.dowmTime()
                } else {
                    clearInterval(this.setInterval);
                    this.finish()
                    this.step = 2;
                }
                this.$apply();
            }, 1000);
        }
        async finish() {
            let _arr = []
            this.qustions.forEach(e => {
                _arr.push({
                    answerUser: e['answerUser'],
                    spendTime: e['spendTime'],
                    questionSort: e.sort,
                    questionId: e.id,
                    answerSheetId: this.testPaper.answerSheetId
                })
            })
            let params = {
                answerSheetId: this.testPaper.answerSheetId,
                answerDetails: JSON.stringify(_arr)
            }
            this.result = await config.answerOver(params)
            this.unTime = this.result.answerSheet.spendTime
            this.$apply()
        }
        methods = {
            back() {
                WxUtils.backOrRedirect('/actPages/pages/index');
            },
            start() {
               
                this.start();
            },
            select(key) {
                // 不可重复答题
                if (!this.qustions[this.qustionInx]['answerUser']) {
                    this.qustions[this.qustionInx]['answerUser'] = key;
                    this.qustions[this.qustionInx]['spendTime'] = 11 - this.unTime;
                    this.nextQus()
                }
            }
        };
    }
</script>
<style>
    page {
        height: 100%;
        font-family: PingFang SC;
        font-weight: 400;
        color: #fff;
        background-image: url('https://images.hxqxly.com/bj.png');
    }
</style>

<style lang="less" scoped>
    .dowm-life {
        width: 80rpx;
        height: 80rpx;
        border-radius: 80rpx;
        border: 8rpx solid var(--red);
        color: var(--red);
        text-align: center;
        line-height: 64rpx;
        box-sizing: border-box;
        font-weight: 600;
        font-size: 30rpx;
        margin-bottom: 20rpx;
    }
    .open-btn {
        margin: 250rpx auto;
    }
    .bg-box {
        width: 100%;
        margin: 60rpx auto 0;
        padding: 80rpx 50rpx;
        background-color: #fac635;
        height: calc(~"100% - 385rpx");
        min-height: 800rpx;
    }
    .question {
        font-weight: 600;
        font-size: 32rpx;
        line-height: 40rpx;
        margin-bottom: 40rpx;
    }
    .answer {
        margin-top: 20rpx;
        font-size: 30rpx;
        min-width: 400rpx;
        height: 80rpx;
        line-height: 80rpx;
        background-color: #fff;
        border-radius: 80rpx;
        color: #000;
        text-align: center;
        padding:0 20rpx;
        &.is-answer.select {
            color: #fff;
            background-color:var(--green);
        }
        &.not-answer.select {
            color: #fff;
            background-color:var(--red);
        }
    }
    .get-btn {
        width: 350rpx;
        height: 88rpx;
        line-height: 88rpx;
        background: #f4d000;
        border-radius: 10rpx;
        font-size: 34rpx;
        color: rgba(254, 254, 254, 1);
        text-align: center;
        margin: 50rpx auto;
    }
    .result-bg{
        background-color: #fff;
        height: 500rpx;
        color:#fac635;
        padding: 60rpx 0;
    }
</style>